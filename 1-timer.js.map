{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst refs = {\n  input: document.querySelector('#datetime-picker'),\n  startBtn: document.querySelector('[data-start]'),\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nlet chosenDate = null;\nlet timerId = null;\n\nrefs.startBtn.disabled = true;\n\nconst fpOptions = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const picked = selectedDates[0];\n    if (picked <= Date.now()) {\n      iziToast.error({\n        message: \"Please choose a date in the future\",\n        position: \"topRight\",\n      });\n      refs.startBtn.disabled = true;\n      return;\n    }\n    chosenDate = picked;\n    refs.startBtn.disabled = false;\n  },\n};\n\nflatpickr(refs.input, fpOptions);\n\nrefs.startBtn.addEventListener('click', () => {\n  refs.startBtn.disabled = true;\n  refs.input.disabled = true;\n  timerId = setInterval(() => {\n    const diff = chosenDate - Date.now();\n    if (diff <= 0) {\n      clearInterval(timerId);\n      updateTimer({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      refs.input.disabled = false;\n      return;\n    }\n    updateTimer(convertMs(diff));\n  }, 1000);\n});\n\nfunction updateTimer({ days, hours, minutes, seconds }) {\n  refs.days.textContent = pad(days);\n  refs.hours.textContent = pad(hours);\n  refs.minutes.textContent = pad(minutes);\n  refs.seconds.textContent = pad(seconds);\n}\n\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const sec = 1000;\n  const min = sec * 60;\n  const hr = min * 60;\n  const d = hr * 24;\n  return {\n    days: Math.floor(ms / d),\n    hours: Math.floor((ms % d) / hr),\n    minutes: Math.floor((ms % hr) / min),\n    seconds: Math.floor((ms % min) / sec),\n  };\n}\n\n\n"],"names":["refs","chosenDate","timerId","fpOptions","selectedDates","picked","iziToast","flatpickr","diff","updateTimer","convertMs","days","hours","minutes","seconds","pad","value","ms"],"mappings":"+IAKA,MAAMA,EAAO,CACX,MAAO,SAAS,cAAc,kBAAkB,EAChD,SAAU,SAAS,cAAc,cAAc,EAC/C,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEA,IAAIC,EAAa,KACbC,EAAU,KAEdF,EAAK,SAAS,SAAW,GAEzB,MAAMG,EAAY,CAChB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAASD,EAAc,CAAC,EAC9B,GAAIC,GAAU,KAAK,MAAO,CACxBC,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UAClB,CAAO,EACDN,EAAK,SAAS,SAAW,GACzB,MACD,CACDC,EAAaI,EACbL,EAAK,SAAS,SAAW,EAC1B,CACH,EAEAO,EAAUP,EAAK,MAAOG,CAAS,EAE/BH,EAAK,SAAS,iBAAiB,QAAS,IAAM,CAC5CA,EAAK,SAAS,SAAW,GACzBA,EAAK,MAAM,SAAW,GACtBE,EAAU,YAAY,IAAM,CAC1B,MAAMM,EAAOP,EAAa,KAAK,IAAG,EAClC,GAAIO,GAAQ,EAAG,CACb,cAAcN,CAAO,EACrBO,EAAY,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EACzDT,EAAK,MAAM,SAAW,GACtB,MACD,CACDS,EAAYC,EAAUF,CAAI,CAAC,CAC5B,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAY,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACtDd,EAAK,KAAK,YAAce,EAAIJ,CAAI,EAChCX,EAAK,MAAM,YAAce,EAAIH,CAAK,EAClCZ,EAAK,QAAQ,YAAce,EAAIF,CAAO,EACtCb,EAAK,QAAQ,YAAce,EAAID,CAAO,CACxC,CAEA,SAASC,EAAIC,EAAO,CAClB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASN,EAAUO,EAAI,CAKrB,MAAO,CACL,KAAM,KAAK,MAAMA,EAAK,KAAC,EACvB,MAAO,KAAK,MAAOA,EAAK,MAAK,IAAE,EAC/B,QAAS,KAAK,MAAOA,EAAK,KAAM,GAAG,EACnC,QAAS,KAAK,MAAOA,EAAK,IAAO,GAAG,CACxC,CACA"}